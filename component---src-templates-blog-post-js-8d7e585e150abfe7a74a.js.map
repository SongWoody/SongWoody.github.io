{"version":3,"file":"component---src-templates-blog-post-js-8d7e585e150abfe7a74a.js","mappings":"iKAiDA,IAtCY,KAAO,IAAD,EAChB,MAcMA,EAA+B,QAAzB,GAdCC,EAAAA,EAAAA,gBAAe,cAcRC,KAAKC,oBAAY,aAAtB,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,MAAMC,MAAO,CAAEC,OAAQ,IACpC,gBAAC,EAAAC,EAAW,CACVH,UAAU,aACVI,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,8BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,eAAc,sBAEnBd,aAAM,EAANA,EAAQe,OACP,yBAAG,cACU,8BAASf,EAAOe,MAAc,KAAEf,aAAM,EAANA,EAAQgB,UAAW,MAG9D,C,uHCtCV,MAiEaC,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAClD,EAIN,UA1EyBC,IAGlB,IAADC,EAAA,IAFJV,MAAM,SAAEW,EAAQ,KAAEC,EAAI,KAAE7B,EAAMkB,eAAgBC,GAAM,SACpDW,GACDJ,EACC,MAAMK,GAA6B,QAAjBJ,EAAA3B,EAAKC,oBAAY,IAAA0B,OAAA,EAAjBA,EAAmBL,QAAK,QAE1C,OACEF,EAAAA,cAACY,EAAAA,EAAM,CAACF,SAAUA,EAAUR,MAAOS,GACjCX,EAAAA,cAAA,WACElB,UAAU,YACV+B,WAAS,EACTC,SAAS,6BAETd,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIe,SAAS,YAAYhB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAA,SAAID,EAAKI,YAAYa,MACpBjB,EAAKI,YAAYc,MAChBjB,EAAAA,cAAA,OAAKlB,UAAU,QACZiB,EAAKI,YAAYc,KAAKC,KAAI,CAACC,EAAKC,IAC/BpB,EAAAA,cAACqB,EAAAA,KAAI,CAACC,IAAKF,EAAOG,GAAE,SAAWJ,EAAOrC,UAAU,OAAM,IAClDqC,OAMZnB,EAAAA,cAAA,WACEwB,wBAAyB,CAAEC,OAAQ1B,EAAK2B,MACxCX,SAAS,gBAEXf,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAAC2B,EAAAA,EAAG,QAGR3B,EAAAA,cAAA,OAAKlB,UAAU,iBACbkB,EAAAA,cAAA,MACEjB,MAAO,CACL6C,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGXhC,EAAAA,cAAA,UACGQ,GACCR,EAAAA,cAACqB,EAAAA,KAAI,CAACE,GAAIf,EAASyB,OAAOC,KAAMC,IAAI,QAAO,KACtC3B,EAASL,YAAYD,QAI9BF,EAAAA,cAAA,UACGS,GACCT,EAAAA,cAACqB,EAAAA,KAAI,CAACE,GAAId,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKN,YAAYD,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\" style={{ margin: 0 }}>\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile_woody.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Logo picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, markdownRemark: post },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n          {post.frontmatter.tags && (\r\n            <div className=\"tags\">\r\n              {post.frontmatter.tags.map((tag, index) => (\r\n                <Link key={index} to={`/tags/${tag}`} className=\"tag\">\r\n                  #{tag}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { markdownRemark: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        tags\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["author","useStaticQuery","site","siteMetadata","className","style","margin","S","layout","formats","src","width","height","quality","alt","name","summary","Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","previous","next","location","siteTitle","Layout","itemScope","itemType","itemProp","date","tags","map","tag","index","Link","key","to","dangerouslySetInnerHTML","__html","html","Bio","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}