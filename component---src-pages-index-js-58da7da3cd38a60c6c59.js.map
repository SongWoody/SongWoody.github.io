{"version":3,"file":"component---src-pages-index-js-58da7da3cd38a60c6c59.js","mappings":"iKAyDA,IA9CY,KAAO,IAAD,IAChB,MAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzB,EAAGF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAA+B,QAAzB,EAAGL,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,8BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,eAAc,sBAEnBZ,aAAM,EAANA,EAAQa,OACP,yBAAG,cACU,8BAASb,EAAOa,MAAc,KAAEb,aAAM,EAANA,EAAQc,UAAW,KAAI,IAElE,qBAAGC,KAAI,yBAAyBZ,aAAM,EAANA,EAAQa,UAAO,KAAU,sCAKzD,C,uHCUV,UAxDkBC,IAAyB,IAADC,EAAA,IAAvB,KAAEpB,EAAI,SAAEqB,GAAUF,EACnC,MAAMG,GAAkC,QAAtBF,EAAApB,EAAKG,KAAKC,oBAAY,IAAAgB,OAAA,EAAtBA,EAAwBG,QAAK,QACzCC,EAAQxB,EAAKyB,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENC,EAAAA,cAACC,EAAAA,EAAM,CAACR,SAAUA,EAAUE,MAAOD,GACjCM,EAAAA,cAACE,EAAAA,EAAG,MACJF,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACC,EAAAA,EAAM,CAACR,SAAUA,EAAUE,MAAOD,GACjCM,EAAAA,cAACE,EAAAA,EAAG,MACJF,EAAAA,cAAA,MAAIG,MAAO,CAAEC,UAAU,SACpBR,EAAMS,KAAIC,IACT,MAAMX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KAEpD,OACET,EAAAA,cAAA,MAAIU,IAAKJ,EAAKE,OAAOC,MACnBT,EAAAA,cAAA,WACEtB,UAAU,iBACViC,WAAS,EACTC,SAAS,6BAETZ,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnCf,EAAAA,cAAA,QAAMe,SAAS,YAAYpB,KAG/BK,EAAAA,cAAA,aAAQM,EAAKC,YAAYS,OAE3BhB,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEiB,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,kBAIZ,KAIJ,EAWN,MAAMM,EAAOA,IAAMrB,EAAAA,cAACsB,EAAAA,EAAG,CAAC3B,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile_woody.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Logo picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          {` `}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Bio />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Bio />\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"All posts\" />\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","_ref","_data$site$siteMetada","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","React","Layout","Bio","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo"],"sourceRoot":""}