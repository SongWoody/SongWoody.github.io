{"version":3,"file":"component---src-templates-tag-js-b72a7b82c3b07605f242.js","mappings":"kLAoDA,UA9CgBA,IAAsC,IAADC,EAAA,IAApC,KAAEC,EAAI,SAAEC,EAAQ,YAAEC,GAAaJ,EAC9C,MAAMK,GAAkC,QAAtBJ,EAAAC,EAAKI,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBO,QAAK,QACzCC,EAAQP,EAAKQ,kBAAkBC,OAC/B,IAAEC,GAAQR,EAEhB,OACES,EAAAA,cAACC,EAAAA,EAAM,CAACX,SAAUA,EAAUK,MAAOH,GACjCQ,EAAAA,cAACE,EAAAA,EAAG,CAACP,MAAK,sBAAwBI,IAClCC,EAAAA,cAAA,UAAI,sBAAoBD,GACxBC,EAAAA,cAAA,MAAIG,MAAO,CAAEC,UAAU,SACpBR,EAAMS,KAAIC,IACT,MAAMX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KAEpD,OACET,EAAAA,cAAA,MAAIU,IAAKJ,EAAKE,OAAOC,MACnBT,EAAAA,cAAA,WACEW,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETb,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACc,EAAAA,KAAI,CAACC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnChB,EAAAA,cAAA,QAAMgB,SAAS,YAAYrB,KAG/BK,EAAAA,cAAA,aAAQM,EAAKC,YAAYU,OAE3BjB,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEkB,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CL,SAAS,kBAIZ,KAIXhB,EAAAA,cAACc,EAAAA,KAAI,CAACC,GAAG,SAAQ,cACV,C","sources":["webpack://gatsby-starter-blog/./src/templates/tag.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst TagPage = ({ data, location, pageContext }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n  const { tag } = pageContext\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title={`Posts tagged with #${tag}`} />\r\n      <h1>Posts tagged with #{tag}</h1>\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n      <Link to=\"/tags\">‚Üê All tags</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default TagPage\r\n\r\nexport const pageQuery = graphql`\r\n  query ($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n` "],"names":["_ref","_data$site$siteMetada","data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","tag","React","Layout","Seo","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}